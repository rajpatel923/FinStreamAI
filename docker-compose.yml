version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID: 1
      - KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      - KAFKA_LOG_RETENTION_HOURS: 168
      - KAFKA_LOG_RETENTION_BYTES: 1073741824
      - KAFKA_LOG_SEGMENT_BYTES: 1048567
    volumes:
      - kafka_data:/var/lib/kafka/data
  schema-register:
    image: confluentinc/cp-schema-registry:7.4.0
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      - SCHEMA_REGISTRY_HOST_NAME: schema-register
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  postgres:
    image: portsgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=finstreami
      - POSTGRES_PASSWORD=finstreami123
      - POSTGRES_DB=finstreami
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: timescaledb
      POSTGRES_USER: finstreami
      POSTGRES_PASSWORD: finstreami123
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./scripts/init-timescaledb.sql:/docker-entrypoint-initdb.d/init-timescaledb.sql

  neo4j:
    image: neo4j:5.12-community
    ports:
      - "7474:7474"
      - "7687:7687"
    environment: NEO4J_AUTH:neo4j/finstreami123
      NEO4J_PLUGINS:'["apoc"]'

    volumes:
      - neo4j_data:/data

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: finstreami
      MINIO_ROOT_PASSWORD: finstreami123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  promethueus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD: finstreami123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      COLLECTOR_OTLP_ENABLED: "true"

volumes:
  zookeeper_data:
  zookeeper_log:
  kafka_data:
  redis_data:
  postgres_data:
  timescaledb_data:
  neo4j_data:
  minio_data:
  prometheus_data:
  grafana_data:
